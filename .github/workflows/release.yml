name: Release Python Package

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Confirm package release"
        required: true
        default: "yes"
env:
  NEO4J_TEST_CONTAINER: 'neo4j:5.26.0-enterprise'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.1"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip pip-tools
          pip-compile --extra dev,gds pyproject.toml
          pip-sync

      - name: Run Tests with pytest
        run: |
          pytest --exitfirst --verbosity=2

  release:
    name: Tag, Build, Publish, and Deploy Docs
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.1"

      - name: Extract Version from etl_lib
        id: get_version
        run: |
          export PYTHONPATH=src 
          VERSION=$(python -c 'import etl_lib; print(etl_lib.__version__)')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Print Extracted Version
        id: print_version
        run: |
          echo "Extracted version: $VERSION"

      - name: Check if Tag Already Exists
        run: |
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "Tag v$VERSION already exists. Failing the workflow."
            exit 1
          fi

      - name: Create Git Tag
        run: |
          git tag v$VERSION
          git push origin v$VERSION

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v$VERSION \
            --title "Release v$VERSION" \
            --notes "Automated release of version v$VERSION"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip pip-tools
          pip-compile --extra dev,gds pyproject.toml
          pip-sync

      - name: Build and Publish Package
        uses: conchylicultor/pypi-build-publish@v1
        with:
          pypi-token: ${{ secrets.PYPI_API_TOKEN }}

      - name: Sphinx build
        run: |
          cd docs
          make html
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          force_orphan: true
#
#      - name: Trigger ReadTheDocs Build for Versioned Docs
#        env:
#          READTHEDOCS_TOKEN: ${{ secrets.READTHEDOCS_TOKEN }}
#        run: |
#          curl -X POST \
#            -H "Authorization: Token $READTHEDOCS_TOKEN" \
#            -d "branches=main" \
#            https://readthedocs.org/api/v3/projects/neo4j-etl-lib/builds/
