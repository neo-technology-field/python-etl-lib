name: tests

on:
  push:
  pull_request:

jobs:
  # Read Python versions from noxfile.py once, then reuse in matrices
  discover:
    runs-on: ubuntu-latest
    outputs:
      py_versions: ${{ steps.get.outputs.py_versions }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
      - name: Install nox (for importing noxfile cleanly)
        run: python -m pip install -U pip nox
      - id: get
        name: Export Python versions from noxfile.py
        run: |
          echo "py_versions=$(python noxfile.py --print-py-versions)" >> "$GITHUB_OUTPUT"

  # Matrix over Python versions — nox runs tests vs latest Neo4j
  python-versions:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(needs.discover.outputs.py_versions) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install nox
        run: python -m pip install -U pip nox
      - name: Run tests (this interpreter)
        run: nox -s py

  # Neo4j variants — single Python; nox runs both LTS + latest sequentially
  neo4j-variants:
    needs: discover
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip
      - name: Install nox
        run: python -m pip install -U pip nox
      - name: Run tests against Neo4j LTS + latest
        run: nox -s neo4j
